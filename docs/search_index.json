[["gis-operations-in-r.html", "7 GIS operations in R 7.1 Case study and demo datasets 7.2 Housekeeping", " 7 GIS operations in R 7.1 Case study and demo datasets Ok, for demonstrating some of the many GIS operations R can perform we will be using data from one of my favourite study areas, the Cape Peninsula. The datasets we sill use, some of their properties and where to source them are tabled below: Name Data.model Geometry.type File.format Data.source URL Localities Vector Point iNaturalist https://www.inaturalist.org/ Watercourses Vector Line ESRI shapefile City of Cape Town https://odp-cctegis.opendata.arcgis.com/datasets/open-watercourse Vegetation Types Vector Polygon ESRI shapefile City of Cape Town https://odp-cctegis.opendata.arcgis.com/datasets/indigenous-vegetation-current-extent Elevation Raster Raster GeoTIFF City of Cape Town https://odp-cctegis.opendata.arcgis.com/datasets/digital-elevation-model-10m-grid-general-binary-ascii If you’d like to follow along and run the analyses that follow, please follow the links and download the datasets. Please note that the elevation dataset is ~130MB. I’ll also put a copy of all datasets on the Vula site for the course, which I understand is zero-data rated. I’ll also demonstrate how to fetch a different, smaller elevation dataset directly from R, so if internet speed is an issue for you don’t download the elevation dataset… 7.2 Housekeeping Apologies, this bit is a little long-winded, but please read it carefully as it will likely affect your ability to run the code below. 7.2.1 Working directories I usually work from a “Project” in RStudio linked to a GIT repository (see https://git-scm.com/ and https://github.com/) for version control and easy code sharing/collaboration. I’m not going to go there with this tutorial, but it is worth exploring if you intend to do big projects in R. R projects set the working directory to a good place automatically. Alternatively you can use the setwd() function. If I’m not in a GIT repo or I am working with large data sets that I don’t want to replicate in every GIT repo on my hard drive I usually set separate “data,” “GIS data” (i.e. biggish data) and “results” working directories by making each path an object and inserting as appropriate for different read and write functions using paste() or paste0(). These would look something like: datwd = &quot;/home/jasper/Dropbox/Teaching/SpatialR/Example/Data/&quot; giswd = &quot;/home/jasper/Documents/GIS/&quot; reswd = &quot;/home/jasper/Dropbox/Teaching/SpatialR/Example/Results/&quot; 7.2.2 Sharing code between multiple machines If you plan run the same code on multiple machines (e.g. your laptop and a workstation) or are sharing code with a collaborator (and are not using GitHub) it’s easiest to automatically detect what computer the code is being run on and set the appropriate working directories (and anything else you like). This can be done by identifying the machine/user using Sys.getenv() and wrapping the code for setting working directories etc in an if() statement for each user, like so: Sys.getenv(&quot;USER&quot;) #Tells us the &quot;USER&quot; name on Mac or Linux ## [1] &quot;jasper&quot; If you are on Windows you need to use Sys.getenv(\"USERNAME\"). I don’t know why its different…? Then I can set up my if() statement. Note that each user/collaborator can set up their own if() statement one after the other because if the statement Sys.getenv(\"USER\")=='jasper' returns FALSE then R doesn’t run the chunk of code in the curly brackets { ... }. if (Sys.getenv(&quot;USER&quot;)==&#39;jasper&#39;) { datwd=&quot;/home/jasper/Dropbox/Teaching/SpatialR/Example/Data/&quot; giswd=&quot;/home/jasper/Dropbox/BlogData/&quot; reswd=&quot;/home/jasper/Dropbox/Teaching/SpatialR/Example/Results/&quot;} if (Sys.getenv(&quot;USER&quot;)==&#39;MACUseR&#39;) {datwd=&quot;&quot;; giswd=&quot;&quot;; reswd=&quot;&quot;} #Change here for Mac/Linux users if (Sys.getenv(&quot;USERNAME&quot;)==&#39;WINDOWSUseR&#39;) {datwd=&quot;&quot;; giswd=&quot;&quot;; reswd=&quot;&quot;} #Change here for Windows users This way a new project member can add a new line of code without deleting anything, and it only sets the working directories (and any other settings you want) for the appropriate user - i.e. the if() statement ignores settings for all other users. If you are running the code from this tutorial you need to set your username and working directories here. You can just set datwd, giswd and reswd to the same file path for the purposes of this tutorial (if you’ve put all the data you downloaded in the same place). 7.2.2.1 A quick aside on slashes Often the reason you can’t read in data is because you need to add (or delete) a “/” at the end! - Silly, but that pro tip should help. Note that we generally use single forwardslashes “/” in R. Windows likes to use single backslashes, but R (and just about every other computer programme in the world) doesn’t like this. You can use double backslashes on Windows if you must… For the sake of simplicity and file size, I have already cropped the elevation and vegetation datasets to a smaller and resampled the raster from 10m to 90m pixel resolution "]]
